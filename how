PLAN
****

There will be objects that have properties to them that we can change

RIGID BODIES
SPRINGS
PIVOT POINTS

1. Rectangle Rigid Body:
	APPROACH: Modify default properties:
		INPUT
			Main Body has the following properties
				|- Force
				|- Mass
				|- Velocity
				|- Acceleration
			- User creates a rectangle rigid body.
			- He gives it a mass (if mass is 0 the body is static)
			- For multiple velocities there are the following options:
				a. If the user wants to enter multiple forces/velocities/accelerations , we tell him to
				Find the resultant and then enter. We can also make another program that calculates the
				resultant. (SIMPLE to implement, but limited control)
				b. Accept forces/velocities/acceleration during runtime from user. I am not sure how to
				implement this. It will also take time.
				CONCLUSION: We go with option a.
			- After user has entered all values. He can start the simulation.
			- NOTE: ground can be a static rectangle rb.

		DRAWING:
			> We have a struct that has the following members:
				- widht
				- height
				- x
				- y
				- mass
				- velocity
				- acceleration
				- force
			* We can create a rectangle using SDL Functions OR scale or own image to fit the width
			and height.

			>> We limit the number of rrb's the user can create, say 10. We keep tracks of all the
			the rrbs in an array (rectrb *). We use this access their position and other properties
			as required (I don't think we will need any other property besides the postion).
			>> We calculate the next position in separate part of the program (call it PHYSICS
			CALCULATION) and return the displacements to the drawing part/function
	
		PHYSICS:
			> Take velocities, accelerations, forces and masses of all rrbs and converted all
			quantities to velocity
			> Then calculate the resultant velocity and then calculate the displacement
			> Return *required values to the drawing functions
			> Will probably use SDL_Rect for passing the final values the function

2. Triangle (RIGHT ANGLED) Rigid Body
3. Circle Rigid Body
